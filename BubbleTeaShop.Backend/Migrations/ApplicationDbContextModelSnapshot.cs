// <auto-generated />
using System;
using BubbleTesShop.Backend.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BubbleTesShop.Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("BubbleTesShop.Backend.Models.AssignmentHistory", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreId", "EmployeeId", "StartDate");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AssignmentHistories", t =>
                        {
                            t.HasCheckConstraint("CK_AssignmentHistory_EndDate", "[EndDate] > [StartDate]");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("HygieneScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RegisterProficiency")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Salary")
                        .HasColumnType("REAL");

                    b.Property<int?>("TrainingSessionsConducted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Employees", t =>
                        {
                            t.HasCheckConstraint("CK_Employee_Email", "[Email] LIKE '_%@_%.__%'");

                            t.HasCheckConstraint("CK_Employee_HygieneScore", "[HygieneScore] IS NULL OR ([HygieneScore] >= 0 AND [HygieneScore] <= 10)");

                            t.HasCheckConstraint("CK_Employee_Phone", "LENGTH([Phone]) = 9");

                            t.HasCheckConstraint("CK_Employee_RegisterProficiency", "[RegisterProficiency] IS NULL OR ([RegisterProficiency] >= 0 AND [RegisterProficiency] <= 10)");

                            t.HasCheckConstraint("CK_Employee_Salary", "[Salary] > 0");

                            t.HasCheckConstraint("CK_Employee_TrainingSessions", "[TrainingSessionsConducted] IS NULL OR [TrainingSessionsConducted] >= 0");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.EmployeeCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CertificateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCertificates", (string)null);
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.EmployeeRoleMapping", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EmployeeRole");

                    b.HasKey("EmployeeId", "Role");

                    b.ToTable("EmployeeRoleMappings", null, t =>
                        {
                            t.HasCheckConstraint("CK_EmployeeRoleMapping_EmployeeRole", "[EmployeeRole] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BasePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MenuItems", null, t =>
                        {
                            t.HasCheckConstraint("CK_MenuItem_BasePrice", "[BasePrice] > 0");

                            t.HasCheckConstraint("CK_MenuItem_Name", "[Name] <> ''");

                            t.HasCheckConstraint("CK_MenuItem_StockQuantity", "[StockQuantity] >= 0");
                        });

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.MenuItemAllergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuItemAllergens", (string)null);
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders", null, t =>
                        {
                            t.HasCheckConstraint("CK_Order_OrderDateTime", "[OrderDateTime] > '0001-01-01'");

                            t.HasCheckConstraint("CK_Order_Status", "[Status] BETWEEN 0 AND 5");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines", t =>
                        {
                            t.HasCheckConstraint("CK_OrderLine_Quantity", "[Quantity] >= 1");

                            t.HasCheckConstraint("CK_OrderLine_Size", "[Size] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.OrderLineToppingMapping", b =>
                {
                    b.Property<int>("OrderLineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Topping")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderLineId", "Topping");

                    b.ToTable("OrderLineToppings", null, t =>
                        {
                            t.HasCheckConstraint("CK_OrderLineToppingMapping_Topping", "[Topping] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ManagingEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ManagingEmployeeId");

                    b.ToTable("Shifts", t =>
                        {
                            t.HasCheckConstraint("CK_Shift_DayOfWeek", "[DayOfWeek] BETWEEN 0 AND 6");

                            t.HasCheckConstraint("CK_Shift_Times", "[EndTime] > [StartTime]");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stores", t =>
                        {
                            t.HasCheckConstraint("CK_Store_Location", "LENGTH([Location]) > 0");

                            t.HasCheckConstraint("CK_Store_Name", "LENGTH([Name]) > 0");
                        });
                });

            modelBuilder.Entity("EmployeeShift", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorksInShiftsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeesId", "WorksInShiftsId");

                    b.HasIndex("WorksInShiftsId");

                    b.ToTable("EmployeeWorksInShifts", (string)null);
                });

            modelBuilder.Entity("MenuItemMenuItemAllergen", b =>
                {
                    b.Property<int>("MenuItemAllergensId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuItemsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuItemAllergensId", "MenuItemsId");

                    b.HasIndex("MenuItemsId");

                    b.ToTable("MenuItem_MenuItemAllergens", (string)null);
                });

            modelBuilder.Entity("MenuItemStore", b =>
                {
                    b.Property<int>("MenuItemsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuItemsId", "StoresId");

                    b.HasIndex("StoresId");

                    b.ToTable("MenuItemStores", (string)null);
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Frappe", b =>
                {
                    b.HasBaseType("BubbleTesShop.Backend.Models.MenuItem");

                    b.Property<int>("BaseFlavor")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasWhippedCream")
                        .HasColumnType("INTEGER");

                    b.ToTable("Frappes", null, t =>
                        {
                            t.HasCheckConstraint("CK_MenuItem_BasePrice", "[BasePrice] > 0");

                            t.HasCheckConstraint("CK_MenuItem_Name", "[Name] <> ''");

                            t.HasCheckConstraint("CK_MenuItem_StockQuantity", "[StockQuantity] >= 0");

                            t.HasCheckConstraint("CK_Frappe_BaseFlavor", "[BaseFlavor] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.FruitTea", b =>
                {
                    b.HasBaseType("BubbleTesShop.Backend.Models.MenuItem");

                    b.Property<int>("FruitBase")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IceLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeaBase")
                        .HasColumnType("INTEGER");

                    b.ToTable("FruitTeas", null, t =>
                        {
                            t.HasCheckConstraint("CK_MenuItem_BasePrice", "[BasePrice] > 0");

                            t.HasCheckConstraint("CK_MenuItem_Name", "[Name] <> ''");

                            t.HasCheckConstraint("CK_MenuItem_StockQuantity", "[StockQuantity] >= 0");

                            t.HasCheckConstraint("CK_FruitTea_FruitBase", "[FruitBase] BETWEEN 0 AND 3");

                            t.HasCheckConstraint("CK_FruitTea_IceLevel", "[IceLevel] BETWEEN 0 AND 3");

                            t.HasCheckConstraint("CK_FruitTea_TeaBase", "[TeaBase] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.MilkTea", b =>
                {
                    b.HasBaseType("BubbleTesShop.Backend.Models.MenuItem");

                    b.Property<int>("MilkBase")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeaBase")
                        .HasColumnType("INTEGER");

                    b.ToTable("MilkTeas", null, t =>
                        {
                            t.HasCheckConstraint("CK_MenuItem_BasePrice", "[BasePrice] > 0");

                            t.HasCheckConstraint("CK_MenuItem_Name", "[Name] <> ''");

                            t.HasCheckConstraint("CK_MenuItem_StockQuantity", "[StockQuantity] >= 0");

                            t.HasCheckConstraint("CK_MilkTea_MilkBase", "[MilkBase] BETWEEN 0 AND 1");

                            t.HasCheckConstraint("CK_MilkTea_TeaBase", "[TeaBase] BETWEEN 0 AND 2");
                        });
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.AssignmentHistory", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.Employee", "Employee")
                        .WithMany("AssignmentHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTesShop.Backend.Models.Store", "Store")
                        .WithMany("AssignmentHistories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.EmployeeCertificate", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.Employee", "Employee")
                        .WithMany("EmployeeCertificates")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.EmployeeRoleMapping", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.OrderLine", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", "MenuItem")
                        .WithMany("OrderLines")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTesShop.Backend.Models.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.OrderLineToppingMapping", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.OrderLine", "OrderLine")
                        .WithMany("OrderLineToppings")
                        .HasForeignKey("OrderLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Shift", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.Employee", "ManagingEmployee")
                        .WithMany("ManagedShifts")
                        .HasForeignKey("ManagingEmployeeId");

                    b.Navigation("ManagingEmployee");
                });

            modelBuilder.Entity("EmployeeShift", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTesShop.Backend.Models.Shift", null)
                        .WithMany()
                        .HasForeignKey("WorksInShiftsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuItemMenuItemAllergen", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItemAllergen", null)
                        .WithMany()
                        .HasForeignKey("MenuItemAllergensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuItemStore", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BubbleTesShop.Backend.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Frappe", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", null)
                        .WithOne()
                        .HasForeignKey("BubbleTesShop.Backend.Models.Frappe", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.FruitTea", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", null)
                        .WithOne()
                        .HasForeignKey("BubbleTesShop.Backend.Models.FruitTea", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.MilkTea", b =>
                {
                    b.HasOne("BubbleTesShop.Backend.Models.MenuItem", null)
                        .WithOne()
                        .HasForeignKey("BubbleTesShop.Backend.Models.MilkTea", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Employee", b =>
                {
                    b.Navigation("AssignmentHistories");

                    b.Navigation("EmployeeCertificates");

                    b.Navigation("EmployeeRoles");

                    b.Navigation("ManagedShifts");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.MenuItem", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.OrderLine", b =>
                {
                    b.Navigation("OrderLineToppings");
                });

            modelBuilder.Entity("BubbleTesShop.Backend.Models.Store", b =>
                {
                    b.Navigation("AssignmentHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
